#!/bin/sh

# the host / must be mounted into this container's $rootfs directory
rootfs=${ROOTFS:-/rootfs}
working_dir=${working_dir:-$1}
old_environment=${old_environment:-$2}
compose_files=${compose_files:-$3}
project=${project:-$4}
quiet=${quiet:-${5:-0}}

if [[ -z ${project} ]]
then
  nuvlabox-engine-printer "Rollback failed! Cannot restore NuvlaBox without a project name." 0 "ERROR" "no"
  exit 1
fi

nuvlabox-engine-printer "Initiating NuvlaBox Engine rollback to previous version" ${quiet} "NONE" yes

rollback_dir="$(pwd)/rollback"
mkdir -p "${rollback_dir}"
cd "${rollback_dir}"

old_nb_dir="${rootfs}${working_dir}"
cp "${old_nb_dir}/*yml" .

if [[ $? -ne 0 ]]
then
  nuvlabox-engine-printer "Cannot access original config files at ${old_nb_dir}" 0 "ERROR" "no"
  exit 1
fi

nuvlabox-engine-printer "Copied old config files into rollback path $(pwd): $(ls)" ${quiet} "INFO" "no"

docker_compose_args=""
for file in $(echo ${compose_files} | tr ',' ' ')
do
  if [[ -f $file ]]
  then
    docker_compose_args="${docker_compose_args} -f ${file}"
  else
    nuvlabox-engine-printer "Cannot find config file ${file} in original installation directory ${working_dir}. Some of the old NuvlaBox functionalities might be lost during this rollback" ${quiet} "WARNING" "no"
  fi
done

env_file="$(pwd)/.env"
nuvlabox-engine-printer "Setting old environment for rollback, at ${env_file}" ${quiet} "INFO" "no"

env_lines=$(echo ${old_environment} | sed 's/,/\\n/g')

echo -e "${env_lines}" | grep -v "affinity:container" > ${env_file}

if [[ $? -ne 0 ]]
then
  nuvlabox-engine-printer "Rollback failed! Unable to restore enviroment ${env_lines} in ${env_file}." 0 "ERROR" "no"
  exit 1
fi

docker_compose_command="docker-compose -p ${project} ${docker_compose_args} up -d"
nuvlabox-engine-printer "Executing command: ${docker_compose_command}" ${quiet} "INFO" "no"

if [[ ${quiet} -eq 1 ]]
then
  out=$($docker_compose_command 2>&1)
else
  out=$($docker_compose_command)
fi

if [[ $? -ne 0 ]]
then
  nuvlabox-engine-printer "Rollback failed when executing Docker Compose command ${docker_compose_command}: ${out}" 0 "ERROR" "no"
  exit 1
fi

wait=5
nuvlabox-engine-printer "Waiting ${wait} seconds and then checking updated NuvlaBox Engine health..." ${quiet} "INFO" "no"
sleep ${wait}

# set timeout for 60 seconds
health=$(nuvlabox-engine-check-health 60 2>&1)

if [[ $? -ne 0 ]]
then
  nuvlabox-engine-printer "NuvlaBox Engine is not healthy. Rollback (after failed update) failed with: ${health}" 0 "ERROR" "no"
  exit 1
fi

# if we got here, then update was successful
nuvlabox-engine-printer "NuvlaBox Engine was rolled back successfully after a failed update" 0 "NONE" "no"